<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "idle"

army = BLUE_ARMY;

gridX = 0;
gridY = 0;

name = "Error";

class = "Peasant";
race = "Human";

// character statistics
level = 1;
profMod = 2 + floor(level / 5);
strMod = 0;
dexMod = 0;
conMod = 0;
intMod = 0;
wisMod = 0;
maxHitPoints = 4 + conMod + ((level - 1) * (3 + conMod));
hitPoints = maxHitPoints;

hitBonus = profMod + strMod;

move = 6;  // 얼마나 많은 그리드를 움직일 수 있는가?
actions = 2;

initiative = dexMod;
initRoll = 0;

// variable related to pathing
movementPath = path_add(); // 이것도 gml에서 쓰이는 DS라는디...
path_set_kind(movementPath, 2); // type 2: rigid path?
path_set_closed(movementPath, false);

moveSpeed = 8; // 픽셀이 움직일 때 속력
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state){
    case "begin path":
        //begin moving along path
        path_start(movementPath, moveSpeed, 0, true);
        state = "moving";
        break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// clear path
path_clear_points(movementPath);

state = "idle";

if(actions &gt; 0){
    oCursor.selectedActor = id;
    movement_range(map[gridX, gridY], move, actions)
} else {
    oGame.currentActor = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// if cursor is hovering over a different node than actor's
if(oCursor.selectedActor == id) {
    // 커서가 있는 그리드까지 라인 그리기, 이 코드를 cursor가 아닌 여기에 쓰는 이유가 있는디 잘 모르겠음.
    if (oCursor.hoverNode != noone &amp;&amp; oCursor.hoverNode != map[gridX, gridY]){
        current = oCursor.hoverNode;
        
        //step through every node in the chain, parent to parent, until we reach the actor's node
        while(current.parent != noone){
            //draw_line_width_color()와 다름
            draw_line_width_colour(current.x + 16, current.y + 16, current.parent.x + 16, current.parent.y + 16, 4, c_lime, c_lime);
            current = current.parent;
        }
    }
}


draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
